parameters:
    cache_livecycle: 60
    cache_class: Sfcms\Cache\CacheBlank
#    cache.class: Sfcms\Cache\CacheFile
#    cache.class: Sfcms\Cache\CacheApc
    cache_dir: "%root%/runtime/cache"

    mailer_transport: mail

    db_host: localhost
    db_port: 3306

    language: en

    editor: ckeditor
#    editor: tinymce
#    editor: elrte

    pdo_session:
        db_table: "session"

    session_storage_class: "Symfony\Component\HttpFoundation\Session\Storage\\NativeSessionStorage"

# configs
page: ~

assetic:
    debug: %debug%
    output: "%root%/static"
    bootstrap: true

database:
    dsn: "mysql:host=%db_host%;port=%db_port%;dbname=%db_name%"
    login: "%db_login%"
    password: "%db_password%"
    migration: "%db_migration%"
    debug: "%debug%"
    options:
        1002: "SET NAMES utf8"

template:
    theme: %template_theme%
    pager: %template_pager%

mailer:
    transport: %mailer_transport%
    username:  %mailer_username%
    password:  %mailer_password%
    spool:
        type: memory
#        type: file

# market config
market: ~

# system config
system: ~

# logger config
logger:
    handlers:
        rotating_handler:
            type: rotating
            path: runtime/logs/logs.txt
            max: 5
        fire_handler:
            type: firephp

captcha:
    width: 100
    height: 25
    color: 0x000000
    bgcolor: 0xFFFFFF

robokassa:
    MrchLogin: ~
    MerchantPass1: ~
    MerchantPass2: ~

gallery:
    mime:
        - 'image/jpeg'
        - 'image/gif'
        - 'image/png'

catalog:
    level: 5

robokassa:
    MrchLogin: "%robokassa_mrch_login%"
    MerchantPass1: "%robokassa_merchant_pass1%"
    MerchantPass2: "%robokassa_merchant_pass2%"


services:
    app:
        synthetic: true

    kernel:
        alias: app

    request:
        synthetic: true

    session:
        class: Symfony\Component\HttpFoundation\Session\Session
        arguments: ["@session.storage"]

    session.storage.mock:
        class: "Symfony\Component\HttpFoundation\Session\Storage\MockArraySessionStorage"

    session.storage:
        class: "%session_storage_class%"
        arguments: [[], "@session.handler"]

    session.handler:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler
        arguments: ["@pdo", "%pdo_session%"]

    event.dispatcher:
        class: Symfony\Component\EventDispatcher\EventDispatcher
        calls:
            - [addListener, [ "kernel.response", [@app, "redirectListener"], 10 ] ]
            - [addListener, [ "kernel.response", [@app, "prepareResult"], 10 ] ]
            - [addListener, [ "kernel.response", [@app, "prepareReload"], 10 ] ]
            - [addListener, [ "kernel.response", [@app, "invokeLayout"] ] ]
            - [addListener, [ "kernel.response", [@app, "createSignature"] ] ]

    locator:
        class: Symfony\Component\Config\FileLocator
        arguments: [["%root%", "%sf_path%"]]

    yaml_loader:
        class: Symfony\Component\Routing\Loader\YamlFileLoader
        arguments: ["@locator"]

    sf_router:
        class: Symfony\Component\Routing\Router
        arguments: ["@yaml_loader", "app/routes.yml", {"debug": %debug%} ]


