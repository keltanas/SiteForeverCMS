<?php

/**
 * Test class for Router.
 * Generated by PHPUnit on 2011-02-16 at 17:04:19.
 */
class RouterTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Router
     */
    protected $router;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->router = App::getInstance()->getRouter();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testCreateLink().
     */
    public function testCreateLink()
    {
        App::getInstance()->getConfig()->set('url.rewrite', false);

        $url    = 'example/foo';
        $params = array('par1'=>'val1','par2'=>'val2');

        $this->assertEquals(
            $this->router->createLink($url, $params),
            "/index.php?route={$url}&par1=val1&par2=val2"
        );

        App::getInstance()->getConfig()->set('url.rewrite', true);

        $this->assertEquals(
            $this->router->createLink($url, $params),
            "/{$url}/par1=val1/par2=val2"
        );

    }

    /**
     * @todo Implement testFindRoute().
     */
    public function testFindRoute()
    {
        // find route in routes.xml
        $request    = App::getInstance()->getRequest();

        $this->router->setRoute('admin');
        $this->router->routing();
        $this->assertEquals( $request->get('controller'), 'page' );
        $this->assertEquals( $request->get('action'), 'admin' );

        $request->set('controller', null);

        $this->router->setRoute('basket');
        $this->router->routing();
        $this->assertEquals( $request->get('controller'), 'basket' );
        $this->assertEquals( $request->get('action'), 'index' );

        $request->set('controller', null);

        $this->router->setRoute('users/edit');
        $this->router->routing();
        $this->assertEquals( $request->get('controller'), 'users' );
        $this->assertEquals( $request->get('action'), 'edit' );

        $request->set('controller', null);

        $this->router->setRoute('test');
        $this->router->routing();
        $this->assertEquals( $request->get('controller'), 'test' );
        $this->assertEquals( $request->get('action'), 'test' );

        $request->set('controller', null);
        $this->router->setRoute('index');
        $this->router->routing();
    }

    /**
     * @todo Implement testFindStructure().
     */
    public function testFindStructure()
    {
        // @TODO Remove the following lines when you implement this test.
    }

    /**
     * @todo Implement testRouting().
     */
    public function testRouting()
    {
        // @TODO Remove the following lines when you implement this test.
    }

    /**
     * @todo Implement testIsSystem().
     */
    public function testIsSystem()
    {
        // @TODO Remove the following lines when you implement this test.
    }

    public function testSetRoute()
    {
        $this->router->setRoute('index');
        $this->assertEquals($this->router->getRoute(), 'index');
    }

    public function testGetRoute()
    {
        $this->router->setRoute('index');
        $this->assertEquals($this->router->getRoute(), 'index');
    }
}
?>
